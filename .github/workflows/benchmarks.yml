name: Performance Benchmarks

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main, develop ]
  workflow_dispatch:

jobs:
  benchmark:
    runs-on: ubuntu-latest
    name: Run Performance Benchmarks

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, dom, fileinfo
          coverage: none
          tools: composer:v2

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Create benchmark baseline
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          vendor/bin/phpbench run --tag=baseline --report=aggregate
          mkdir -p .phpbench
          vendor/bin/phpbench show --output=json > .phpbench/baseline.json

      - name: Run benchmarks
        run: |
          vendor/bin/phpbench run --report=default --iterations=3 --revs=100

      - name: Run benchmark comparison
        if: github.event_name == 'pull_request'
        run: |
          # Run benchmarks and save results
          vendor/bin/phpbench run --tag=current --report=aggregate --iterations=3 --revs=100

          # Compare with baseline if exists
          if [ -f .phpbench/baseline.json ]; then
            vendor/bin/phpbench report --file=.phpbench/baseline.json --file=latest --report=compare
          fi

      - name: Check performance regression
        if: github.event_name == 'pull_request'
        run: |
          # Run benchmarks with regression detection
          vendor/bin/phpbench run --assert="mode <= mode +5%" --iterations=3 --revs=100 || {
            echo "::error::Performance regression detected (>5% slowdown)"
            exit 1
          }

      - name: Generate HTML report
        if: always()
        run: |
          vendor/bin/phpbench run --report=html --output=html --iterations=3 --revs=100
          mkdir -p benchmark-results
          mv .phpbench/html/* benchmark-results/ || true

      - name: Upload benchmark results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results
          path: benchmark-results/

      - name: Comment PR with results
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            let comment = '## üìä Performance Benchmark Results\n\n';

            try {
              // Read benchmark output if available
              const benchOutput = fs.readFileSync('.phpbench/report.txt', 'utf8');
              comment += '```\n' + benchOutput + '\n```\n';
            } catch (e) {
              comment += '‚ö†Ô∏è No benchmark results available\n';
            }

            comment += '\n[View detailed HTML report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})';

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  benchmark-memory:
    runs-on: ubuntu-latest
    name: Memory Usage Benchmarks

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP with memory profiling
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, dom, fileinfo
          coverage: none
          tools: composer:v2
          ini-values: memory_limit=256M

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run memory benchmarks
        run: |
          vendor/bin/phpbench run --group=memory --report=memory --iterations=3

      - name: Check memory limits
        run: |
          # Ensure memory usage is within acceptable bounds
          vendor/bin/phpbench run --group=memory --assert="mem_peak <= 10485760" || {
            echo "::warning::High memory usage detected (>10MB for standard operations)"
          }